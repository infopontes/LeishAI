"""Add Breed model and link to Animal

Revision ID: 1e694734fd2c
Revises: 15b1870dd74c
Create Date: 2025-10-12 10:21:54.104517

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "1e694734fd2c"
down_revision: Union[str, Sequence[str], None] = "15b1870dd74c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "breeds",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_breeds_name"), "breeds", ["name"], unique=True)
    op.create_table(
        "assessments",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "general_state",
            sa.Enum("bom", "regular", "ruim", name="generalstate"),
            nullable=True,
        ),
        sa.Column(
            "ectoparasites",
            sa.Enum("ausente", "leve", "grave", name="severity"),
            nullable=True,
        ),
        sa.Column(
            "nutritional_state",
            sa.Enum(
                "adequado", "leve_moderado", "grave", name="nutritionalstate"
            ),
            nullable=True,
        ),
        sa.Column(
            "coat",
            sa.Enum(
                "normal", "leves_moderadas", "graves", name="lesionseverity"
            ),
            nullable=True,
        ),
        sa.Column(
            "nails",
            sa.Enum(
                "normal", "leves_moderadas", "graves", name="lesionseverity"
            ),
            nullable=True,
        ),
        sa.Column(
            "mucosa_color",
            sa.Enum(
                "normal",
                "levemente_hipercorada",
                "cianotica",
                "congesta",
                "icterica",
                "palida",
                name="mucosacolor",
            ),
            nullable=True,
        ),
        sa.Column(
            "muzzle_ear_lesion",
            sa.Enum("presente", "ausente", name="presenceabsence"),
            nullable=True,
        ),
        sa.Column(
            "lymph_nodes",
            sa.Enum(
                "normal", "leves_moderadas", "graves", name="lesionseverity"
            ),
            nullable=True,
        ),
        sa.Column(
            "blepharitis",
            sa.Enum("presente", "ausente", name="presenceabsence"),
            nullable=True,
        ),
        sa.Column(
            "conjunctivitis",
            sa.Enum("presente", "ausente", name="presenceabsence"),
            nullable=True,
        ),
        sa.Column(
            "alopecia",
            sa.Enum("presente", "ausente", name="presenceabsence"),
            nullable=True,
        ),
        sa.Column(
            "bleeding",
            sa.Enum("presente", "ausente", name="presenceabsence"),
            nullable=True,
        ),
        sa.Column(
            "skin_lesion",
            sa.Enum("presente", "ausente", name="presenceabsence"),
            nullable=True,
        ),
        sa.Column(
            "muzzle_lip_depigmentation",
            sa.Enum("presente", "ausente", name="presenceabsence"),
            nullable=True,
        ),
        sa.Column(
            "culture",
            sa.Enum("positivo", "negativo", name="diagnosisresult"),
            nullable=True,
        ),
        sa.Column(
            "slide",
            sa.Enum("positivo", "negativo", name="diagnosisresult"),
            nullable=True,
        ),
        sa.Column(
            "diagnosis",
            sa.Enum("positivo", "negativo", name="diagnosisresult"),
            nullable=True,
        ),
        sa.Column("animal_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["animal_id"],
            ["animals.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "animals", sa.Column("original_id", sa.String(), nullable=True)
    )
    op.add_column("animals", sa.Column("breed_id", sa.UUID(), nullable=False))
    op.create_index(
        op.f("ix_animals_original_id"), "animals", ["original_id"], unique=True
    )
    op.create_foreign_key(None, "animals", "breeds", ["breed_id"], ["id"])
    op.drop_column("animals", "breed")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "animals",
        sa.Column("breed", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "animals", type_="foreignkey")
    op.drop_index(op.f("ix_animals_original_id"), table_name="animals")
    op.drop_column("animals", "breed_id")
    op.drop_column("animals", "original_id")
    op.drop_table("assessments")
    op.drop_index(op.f("ix_breeds_name"), table_name="breeds")
    op.drop_table("breeds")
    # ### end Alembic commands ###
